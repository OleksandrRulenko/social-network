{"version":3,"sources":["components/DIALOGS/Dialogs.module.css","components/DIALOGS/DIALOG_ITEM/DialogItem.jsx","components/DIALOGS/MESSAGE/Message.jsx","components/DIALOGS/Dialogs.jsx","HOC/withAuthRedirect.js","components/DIALOGS/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","d","key","messagesElements","messages","newMessageBody","isAuth","dialogs","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,+FCchKC,EAVI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAEC,OAAQ,IAAKD,IAAEE,QAC7B,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,IAAKN,EAAMO,QCIzCC,EARC,SAACR,GACb,OACI,yBAAKC,UAAWC,IAAEO,SACbT,EAAMS,U,yCCmCbC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACVC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,wBAExB,6BAAK,6CAOFC,EAnDC,SAACvB,GAEb,IAAIwB,EAAQxB,EAAMyB,YAGdC,EAAkBF,EAAMG,YAAYC,KAAI,SAACC,GACzC,OAAO,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAEvB,GAAIA,GAAIuB,EAAEvB,QAGlDyB,EAAmBP,EAAMQ,SAASJ,KAAI,SAACnB,GACvC,OAAO,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASqB,IAAKrB,EAAQH,QAEtCkB,EAAMS,eAM3B,OAAKjC,EAAMkC,OAGP,yBAAKjC,UAAWC,IAAEiC,SACd,yBAAKlC,UAAWC,IAAEkC,cACbV,GAEL,yBAAKzB,UAAWC,IAAE8B,UACd,6BAAMD,GACN,kBAACnB,EAAD,CAAqBG,SAbb,SAACsB,GACjBrC,EAAMsC,YAAYD,EAAOJ,qBAGH,kBAAC,IAAD,CAAU5B,GAAI,Y,wCCrBxCkC,G,OAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,U,OCaRO,sBACXC,aAdkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACkB,GACtB,MAAO,CACHL,YAAa,SAACL,GACVU,EAASC,YAAmBX,UDLR,SAACY,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAK/C,MAAMkC,OACT,kBAACW,EAAcE,KAAK/C,OADI,kBAAC,IAAD,CAAUK,GAAG,eAJT,GAEX2C,IAAMH,WAStC,OAFqCH,YAASH,EAATG,CAAsCI,KCChEL,CAGZlB","file":"static/js/5.4e6cf6ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3MG1d\",\"dialogsItems\":\"Dialogs_dialogsItems__22pk5\",\"dialog\":\"Dialogs_dialog__26uoK\",\"active\":\"Dialogs_active__wZLrY\",\"messages\":\"Dialogs_messages__EBG5l\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog +' '+ s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DIALOG_ITEM/DialogItem.jsx\"\r\nimport Message from \"./MESSAGE/Message.jsx\"\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../COMMON/FORMS_CONTROLS/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../UTILS/VALIDATORS/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    //let dialogsElements = dialogsData.map ( dialog => <DialogItem name={dialog.name} id={dialog.id}/> ); // skoroczenyj wariant nyÅ¼niogo kodu\r\n    let dialogsElements = state.dialogsData.map((d) => {\r\n        return <DialogItem name={d.name} key={d.id} id={d.id} />\r\n    });\r\n\r\n    let messagesElements = state.messages.map((message) => {\r\n        return <Message message={message.message} key={message.id} />\r\n    });\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} \r\n                        validate={[required, maxLength50]}\r\n                        name=\"newMessageBody\"\r\n                        placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm);\r\n\r\nexport default Dialogs;","import { render } from \"@testing-library/react\"\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport { sendMessageCreator } from \"../../REDUX/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}