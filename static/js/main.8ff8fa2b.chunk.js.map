{"version":3,"sources":["REDUX/profile-reducer.js","components/NAVBAR/Navbar.module.css","REDUX/dialogs-reducer.js","ASSETS/IMAGES/user.png","ASSETS/IMAGES/preloader.gif","components/LOGIN/Login.module.css","API/api.js","components/NAVBAR/Navbar.jsx","components/NEWS/News.jsx","components/MUSIC/Music.jsx","components/SETTINGS/Settings.jsx","components/HEADER/Header.jsx","REDUX/auth-reducer.js","components/HEADER/HeaderContainer.jsx","components/UTILS/VALIDATORS/object-helpers.js","REDUX/users-reducer.js","components/COMMON/PAGINATOR/Paginator.jsx","components/USERS/User.jsx","components/USERS/Users.jsx","REDUX/users-selectors.js","components/USERS/UsersContainer.jsx","components/LOGIN/Login.jsx","REDUX/app-reducer.js","REDUX/sidebar-reducer.js","REDUX/redux-store.js","HOC/withSuspense.js","App.js","serviceWorker.js","index.js","components/COMMON/FORMS_CONTROLS/FormsControls.jsx","components/COMMON/PRELOADER/Preloader.jsx","components/COMMON/PAGINATOR/Paginator.module.css","components/USERS/users.module.css","components/COMMON/FORMS_CONTROLS/FormsControls.module.css","components/UTILS/VALIDATORS/validators.js","components/HEADER/Header.module.css"],"names":["initialState","posts","id","message","likesCount","profile","status","addPostActionCreator","newPostText","type","setStatus","getUserProfile","userId","dispatch","a","userAPI","getProfile","response","data","getStatus","profileAPI","updateStatus","resultCode","profileReducer","state","action","newPost","filter","p","module","exports","dialogsData","name","messages","sendMessageCreator","newMessageBody","dialogsReducer","body","instance","axios","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","then","follow","post","unfollow","delete","console","warn","put","authAPI","me","login","email","password","rememverMe","logout","Navbar","className","s","nav","item","active","to","activeClassName","News","props","Music","newArray","map","newArray2","eng","ua","el","Settings","Header","header","src","alt","logo","loginBlock","isAuth","onClick","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","this","React","Component","connect","auth","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","Paginator","totalItemsCount","onPageChenged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","button","classNames","selectedPage","pageNumber","key","e","User","user","usersItem","photos","small","userPhoto","usersPhoto","disabled","some","Users","usersPage","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Preloader","compose","bind","page","totalCount","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","rememberMe","length","stopSubmit","_error","pageLoginBox","formData","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","component","AppContainer","withRouter","promise","Promise","all","RulenkoApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","text","validate","backgroundColor","preloader","value","maxLengthCreator","maxLength"],"mappings":"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","file":"static/js/main.8ff8fa2b.chunk.js","sourcesContent":["import { userAPI, profileAPI } from \"../API/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, how are you?\", likesCount: 12 },\r\n        { id: 2, message: \"DHow is your it-kam\", likesCount: 34 },\r\n        { id: 3, message: \"it's my first post\", likesCount: 4 },\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id != action.id) }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: 'ADD-POST', newPostText });\r\nexport const setUserProfile = (profile) => ({ type: 'SET_USER_PROFILE', profile });\r\nexport const setStatus = (status) => ({ type: 'SET_STATUS', status });\r\nexport const deletePost = (postId) => ({ type: 'DELETE_POST', postId });\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await userAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1jWeJ\",\"item\":\"Navbar_item__Z9cOn\",\"active\":\"Navbar_active__1dnfF\"};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState ={\r\n    dialogsData: [\r\n        {id: 1, name: 'Dina'},\r\n        {id: 2, name: 'Dima'},\r\n        {id: 3, name: 'Nims'},\r\n        {id: 4, name: 'Lina'},\r\n        {id: 5, name: 'Lima'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'DHow is your it-kam'},\r\n        {id: 3, message: 'Yop'},\r\n        {id: 4, message: 'Yo yo yo'},\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return { \r\n                ...state,\r\n                messages: [ ...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: 'SEND_MESSAGE', newMessageBody});\r\n\r\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/user.9f7ae076.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.98de2c3b.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageLoginBox\":\"Login_pageLoginBox__2WjAN\"};","import * as axios from \"axios\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\":  \"defa365b-300e-4c04-9cbb-202cd747e5e3\"\r\n      }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n       return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememverMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememverMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from'./Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Dialogs / Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n            {/* sdjfksdjflsdfj */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n\r\n    let oldArray = [\r\n        \"Dima\",\r\n        \"Nina\",\r\n        \"Lina\",\r\n        \"Kina\"\r\n    ];\r\n\r\n    // let newArray = oldArray.map ( name => {\r\n    //         // return \"<li>\" + name + \"</li>\";  // sposob 1a\r\n    //         return `<li>${name}</li>`;          // sposob 1b\r\n    // });\r\n\r\n    let newArray = oldArray.map (name => `<li>${name}</li>`);  // sposob 2\r\n\r\n    // ------------------------------------------------------------------\r\n\r\n    let oldArray2 = [\r\n        {eng: \"blabla\", ua: \"БЛАБЛА\"},\r\n        {eng: \"hello\", ua: \"привіт\"},\r\n        {eng: \"hi\", ua: \"здоров\"},   \r\n    ];\r\n\r\n    let newArray2 = oldArray2.map( el => ( '<Message eng={el.eng} ua={el.ua} />' ) );\r\n\r\n\r\n    return (\r\n        <div>\r\n            Music\r\n\r\n            <ul>\r\n                {newArray}\r\n            </ul>\r\n\r\n            {newArray2}\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    // debugger;\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='' alt=\"\" />\r\n            <span className={s.logo}>\r\n                RO\r\n            </span>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div> {props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../API/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n    // isFetching: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            // debugger;\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../REDUX/auth-reducer';\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer);","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import { userAPI } from \"../API/api\";\r\nimport { updateObjectInArray } from \"../components/UTILS/VALIDATORS/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    newPostText: '',\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n\r\n    followingInProgress: [],\r\n    fake: 10,  // test\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: 'FOLLOW', userId });\r\nexport const unfollowSuccess = (userId) => ({ type: 'UNFOLLOW', userId });\r\nexport const setUsers = (users) => ({ type: 'SET_USERS', users });\r\nexport const setCurrentPage = (currentPage) => ({ type: 'SET_CURRENT_PAGE', currentPage });\r\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: 'SET_TOTAL_USERS_COUNT', count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: 'TOGGLE_IS_FETCHING', isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: 'TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId });\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await userAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n//------------------------------------------------------------------\r\n// export const follow = (userId) => {\r\n//     return async (dispatch) => {\r\n//         dispatch(toggleFollowingProgress(true, userId));\r\n//         let response = await userAPI.follow(userId);\r\n//         if (response.data.resultCode == 0) {\r\n//             dispatch(followSuccess(userId));\r\n//         }\r\n//         dispatch(toggleFollowingProgress(false, userId));\r\n//     }\r\n// }\r\n// export const unfollow = (userId) => {\r\n//     return async (dispatch) => {\r\n//         dispatch(toggleFollowingProgress(true, userId));\r\n//         let response = await userAPI.unfollow(userId)\r\n//         if (response.data.resultCode == 0) {\r\n//             dispatch(unfollowSuccess(userId));\r\n//         }\r\n//         dispatch(toggleFollowingProgress(false, userId));\r\n//     }\r\n// }\r\n// --- top code or bottom code ----------------------\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\n// import cn from \"classnames\";\r\nimport classNames from 'classnames';\r\n\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChenged, portionSize = 20 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button className={styles.button} onClick={() => { setPortionNumber(portionNumber - 1) }}>&#8592;</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={classNames({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChenged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button   className={styles.button} onClick={() => { setPortionNumber(portionNumber + 1) }}>&#8594;</button>}\r\n\r\n    </div>\r\n}\r\nexport default Paginator;\r\n\r\n// ---------------------------------------------------------------------------\r\n\r\n\r\n// import React, {useState} from 'react'\r\n// import styles from './Paginator.module.css'\r\n// import cn from 'classnames'\r\n\r\n// type PropsType = {\r\n//     totalItemsCount: number\r\n//     pageSize: number\r\n//     currentPage: number\r\n//     onPageChanged: (pageNumber: number) => void\r\n//     portionSize?: number\r\n// }\r\n\r\n// let Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize,\r\n//                                       currentPage,\r\n//                                       onPageChanged,\r\n//                                       portionSize = 10}) => {\r\n\r\n//     let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n//     let pages: Array<number> = [];\r\n//     for (let i = 1; i <= pagesCount; i++) {\r\n//         pages.push(i);\r\n//     }\r\n\r\n//     let portionCount = Math.ceil(pagesCount / portionSize);\r\n//     let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n//     let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n//     let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n//     return <div className={cn(styles.paginator)}>\r\n//         { portionNumber > 1 &&\r\n//         <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n//             {pages\r\n//                 .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n//                 .map((p) => {\r\n//                 return <span className={ cn({\r\n//                     [styles.selectedPage]: currentPage === p\r\n//                 }, styles.pageNumber) }\r\n//                              key={p}\r\n//                              onClick={(e) => {\r\n//                                  onPageChanged(p);\r\n//                              }}>{p}</span>\r\n//             })}\r\n//         { portionCount > portionNumber &&\r\n//             <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n//     </div>\r\n// }\r\n\r\n// export default Paginator;","import React from 'react';\r\nimport s from './users.module.css';\r\nimport userPhoto from '../../ASSETS/IMAGES/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div className={s.usersItem}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.usersPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { unfollow(user.id) }}>\r\n                            Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => { follow(user.id) }}>\r\n                            Follow</button>\r\n                    }\r\n\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )}\r\n\r\n    export default User;","import React from 'react';\r\nimport s from './users.module.css';\r\nimport Paginator from '../COMMON/PAGINATOR/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ currentPage, totalUsersCount, pageSize, onPageChenged, users, ...props }) => {\r\n    return <div className={s.usersPage}>\r\n        <Paginator currentPage={currentPage} onPageChenged={onPageChenged}\r\n            totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                    followingInProgress={props.followingInProgress}\r\n                    key={u.id}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","// import React from 'react';?\r\nimport { createSelector} from \"reselect\";\r\n\r\n\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n   return users.filter(u => true);\r\n} )\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount= (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage= (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching= (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress= (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n// export const countSomethingDifficult = (state) => {  //test\r\n//     //for... math... big arrays\r\n//     let count = 23;\r\n//     return count;\r\n// }","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { \r\n    follow, \r\n    unfollow,  \r\n    setCurrentPage, \r\n    toggleFollowingProgress,\r\n    requestUsers\r\n     } from '../../REDUX/users-reducer';\r\nimport Users from './Users.jsx';\r\nimport Preloader from '../COMMON/PRELOADER/Preloader';\r\nimport { compose } from 'redux';\r\nimport {  getUsers, getPageSize, getTotalUsersCount, \r\n    getCurrentPage, getIsFetching, getFollowingInProgress, } from './../../REDUX/users-selectors';\r\n\r\n    // ../../REDUX/users-selectors'\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChenged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users   totalUsersCount={this.props.totalUsersCount}\r\n                            pageSize={this.props.pageSize}\r\n                            currentPage={this.props.currentPage}\r\n                            onPageChenged={this.onPageChenged}\r\n                            users={this.props.users}\r\n                            follow={this.props.follow}\r\n                            unfollow={this.props.unfollow}\r\n                            followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    //withAuthRedirect,\r\n    connect (mapStateToProps,  {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        getUsers: requestUsers\r\n        })\r\n) (UsersContainer);","import React from 'react';\r\nimport s from \"./Login.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input, createField } from '../COMMON/FORMS_CONTROLS/FormsControls';\r\nimport { required } from '../UTILS/VALIDATORS/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../REDUX/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from \"./../COMMON/FORMS_CONTROLS/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    //debugger;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {createField(null, \"rememberMe\", [required], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n            {/* // top code or bottom code //  imported from '../COMMON/FORMS_CONTROLS/FormsControls'*/}\r\n            {/* <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input}\r\n                    validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"}\r\n                    type={\"password\"}\r\n                    component={Input}\r\n                    validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} /> remember me\r\n            </div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div> */}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div className={s.pageLoginBox}>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","// import { authAPI } from \"../API/api\";\r\n// import {stopSubmit} from \"redux-form\";\r\n\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'samurai-network/auth/INITIALIZED_SUCCESS';\r\n// const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n    .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    sidebar: sidebarReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/COMMON/PRELOADER/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\nimport './App.css';\nimport Navbar from './components/NAVBAR/Navbar';\nimport News from './components/NEWS/News';\nimport Music from './components/MUSIC/Music';\nimport Settings from './components/SETTINGS/Settings';\nimport { Route, withRouter } from \"react-router-dom\";\nimport HeaderContainer from './components/HEADER/HeaderContainer';\nimport UsersContainer from './components/USERS/UsersContainer';\nimport LoginPage from './components/LOGIN/Login';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './REDUX/app-reducer.js'\nimport Preloader from './components/COMMON/PRELOADER/Preloader';\nimport store from './REDUX/redux-store'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { withSuspense } from './HOC/withSuspense';\n\n//import DialogsContainer from './components/DIALOGS/DialogsContainer';\nconst DialogsContainer = React.lazy(() => import('./components/DIALOGS/DialogsContainer'));\n// import ProfileContainer from './components/PROFILE/ProfileContainer';\nconst ProfileContainer = React.lazy(() => import('./components/PROFILE/ProfileContainer'));\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return < Preloader />\n    }\n\n    return (\n      <div className='app-wrapper'>\n\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n\n          {/* <Route path='/dialogs'\n            render={() => {\n              return <React.Suspense fallback={<Preloader />}>\n                <DialogsContainer />\n            </React.Suspense>\n            }} /> */}\n          <Route path='/dialogs'\n            render={withSuspense(DialogsContainer)} />\n\n          <Route path='/profile/:userId?'\n            render={withSuspense(ProfileContainer)} />\n\n          <Route path='/users'\n            render={() => <UsersContainer />} />\n\n          <Route path='/login'\n            render={() => <LoginPage />} />\n\n          <Route path='/news' component={News} />\n          <Route path='/music' component={Music} />\n          <Route path='/settings' component={Settings} />\n\n        </div>\n\n        <footer className=\"footer\">\n          rulenko.com\n        </footer>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);\n\nconst RulenkoApp = (props) => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n}\n\nexport default RulenkoApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RulenkoApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// setInterval(() => {              //TEST\n//     store.dispatch({type: \"FAKE\"})\n// }, 1000);\n\nReactDOM.render(<RulenkoApp />, document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({ input, meta: {touched, error}, children,}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        />{text}\r\n    </div>\r\n);  //use in Login.jsx","import React from 'react';\r\nimport preloader from '../../../ASSETS/IMAGES/preloader.gif';\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={ { backgroundColor: '#14141f' } }>\r\n        <img src={ preloader }/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2FMK5\",\"pageNumber\":\"Paginator_pageNumber__S3uCt\",\"selectedPage\":\"Paginator_selectedPage__22tnH\",\"button\":\"Paginator_button__3jYsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"users_usersPage__yZ4Jn\",\"usersItem\":\"users_usersItem__KlGVX\",\"usersPhoto\":\"users_usersPhoto__16xZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1_lJc\",\"error\":\"FormsControls_error__32EWD\",\"formSummaryError\":\"FormsControls_formSummaryError__RDA5m\"};","export const required= value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ZI_m\",\"logo\":\"Header_logo__3Lu2K\",\"loginBlock\":\"Header_loginBlock__1pEt-\"};"],"sourceRoot":""}