{"version":3,"sources":["components/PROFILE/PROFILE_INFO/ProfileInfo.module.css","components/PROFILE/MY_POSTS/POST/Post.module.css","components/PROFILE/MY_POSTS/MyPosts.module.css","components/PROFILE/MY_POSTS/POST/Post.jsx","components/PROFILE/MY_POSTS/MyPosts.jsx","components/PROFILE/MY_POSTS/MyPostsContainer.jsx","components/PROFILE/PROFILE_INFO/ProfileStatusWithHooks.jsx","components/PROFILE/PROFILE_INFO/ProfileInfo.jsx","components/PROFILE/Profile.jsx","components/PROFILE/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","name","Field","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","reverse","map","p","createRef","content","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","console","log","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.cce5ef33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1493y\",\"mustang\":\"ProfileInfo_mustang__2bZIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2vvQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__2tfPR\",\"posts\":\"MyPosts_posts__5IEGC\"};","import React from 'react';\r\nimport s from'./Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://st.motortrend.com/uploads/sites/10/2016/06/2017-ford-mustang-v6-coupe-angular-front.png\" alt=\"\"/>\r\n                <span> {props.message} </span>\r\n                {/* <span> {props.message} </span> */}\r\n            <div>\r\n             <span> like {props.likesCount}</span>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n\r\n    \r\n    );\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport Post from './POST/Post'\r\nimport s from './MyPosts.module.css';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from '../../UTILS/VALIDATORS/validators';\r\nimport { Textarea } from '../../COMMON/FORMS_CONTROLS/FormsControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <p>{props.name}</p>\r\n            <div>\r\n                <Field name=\"newPostText\"\r\n                    component={Textarea}\r\n                    placeholder={\"Post message\"}\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements =\r\n        [...props.posts].reverse().map(p =>\r\n            <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <main className={s.content}>\r\n            <h2>My posts </h2>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </main>\r\n    );\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator} from '../../../REDUX/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n           dispatch(addPostActionCreator(newPostText)); \r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n// import { useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [ editMode, setEditMode ] = useState(false);\r\n    let [ status, setStatus ] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onClick={ activateEditMode }>{props.status || \"---\"}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input  onChange={onStatusChange} autoFocus={true} \r\n                    onBlur={ deactivateEditMode } value={status}/>\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../COMMON/PRELOADER/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport ProMod from'./Profile.module.css';\r\nimport MyPostsContainer from './MY_POSTS/MyPostsContainer';\r\nimport ProfileInfo from './PROFILE_INFO/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    // debugger;\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} \r\n                    status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer  />  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\n// import * as axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../REDUX/profile-reducer';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n         if (!userId) {                                   // my koment\r\n            userId = this.props.authorizedUserId;        // my koment\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n         }                                                // my koment\r\n        this.props.getUserProfile(userId);\r\n        // setTimeout(() => {\r\n            this.props.getStatus(userId);\r\n        // }, 1000);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"rENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props} \r\n                    profile={this.props.profile}\r\n                    status={this.props.status} \r\n                    updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n// let mapStateToProps = (state) => ({\r\n//     profile: state.profilePage.profile,\r\n//     status: state.profilePage.status,\r\n//     authorizedUserId: state.auth.userId,\r\n//     isAuth: state.auth.isAuth\r\n// });\r\n\r\nlet mapStateToProps = (state) => {            // test\r\n    console.log('mapStatetoProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}      // test\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n) (ProfileContainer);\r\n\r\n"],"sourceRoot":""}